name: Deploy site

on:
  workflow_run:
    workflows: ["Test building site"]
    types: [completed]
    branches: [master]
  workflow_dispatch:

env:
  DEPLOY_BRANCH: master

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.repository == 'CasperWA/jekyll-theme-uni' && github.event.workflow_run.conclusion == 'success'

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.DEPLOY_BRANCH }}
          fetch-depth: 0

      - name: Install SSH key for welzel.nu
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          SSH_DIR=~/.ssh
          PRIVATE_KEY=${SSH_DIR}/id_deploy
          PUBLIC_KEY=${PRIVATE_KEY}.pub
          KNOWN_HOSTS=${SSH_DIR}/known_hosts
          SSH_CONFIG=${SSH_DIR}/config
          
          mkdir -p ${SSH_DIR}

          ssh-keyscan ${{ secrets.SSH_HOST }} >> ${KNOWN_HOSTS}

          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ${PRIVATE_KEY}
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ${PUBLIC_KEY}

          chmod 600 ${PRIVATE_KEY}
          chmod 644 ${PUBLIC_KEY}

          ssh-agent -a ${SSH_AUTH_SOCK} > /dev/null
          ssh-add ${PRIVATE_KEY}

          cat > ${SSH_CONFIG} << EOL
          Host welzel-nu
            Hostname ${{ secrets.SSH_HOST }}
            User deploy
            IdentityFile ${PRIVATE_KEY}
          EOL

      - name: Configure git
        run: |
          git config --global user.email "casper@welzel.nu"
          git config --global user.name "Casper Welzel Andersen"
          git remote add deploy deploy@welzel-nu:~/jekyll-theme-uni.git

      - name: Check if there are changes with remote
        run: |
          git fetch deploy refs/heads/${{ env.DEPLOY_BRANCH }}

          if [ "$(git rev-parse HEAD)" == "$(git rev-parse deploy/${{ env.DEPLOY_BRANCH }})" ]; then
            echo "No changes to the output on this push; re-committing the latest commit to force a new deployment."
            git commit --amend --no-edit
          else
            echo "There are changes to the output on this push; pushing the changes."
          fi

      - name: Deploy site
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          git push -f deploy ${{ env.DEPLOY_BRANCH }}
